
[{
    "methodType":"POST",
    "methodName":"createwabli",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Wabli"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiWabliApi = new TempApi.WabliApi();",
    "importModelParameter":["let wabli = new TempApi.Wabli();"],
    "modelNames":["wabli"],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiWabliApi.createwabli( wabli, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"DELETE",
    "methodName":"deletewabli",
    "returnType":{

      "primitive":"true",
      "type":"null"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiWabliApi = new TempApi.WabliApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiWabliApi.deletewabli( wabliId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully.');/**nextFunction*/}});"
  },{
    "methodType":"GETALL",
    "methodName":"getAllwabli",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Wabli]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiWabliApi = new TempApi.WabliApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiWabliApi.getAllwabli((error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GET",
    "methodName":"getwabli",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Wabli"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiWabliApi = new TempApi.WabliApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiWabliApi.getwabli( wabliId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"PUT",
    "methodName":"updatewabli",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Wabli"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiWabliApi = new TempApi.WabliApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiWabliApi.updatewabli( wabliId, opts, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  }
]
